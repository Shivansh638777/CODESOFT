#include <iostream>
#include <vector>

using namespace std;

const int SIZE = 3;
vector<vector<char>> board(SIZE, vector<char>(SIZE, ' '));


void printBoard();
bool isWin(char player);
bool isDraw();
void getMove(char player);
void switchPlayer(char& player);
bool playAgain();

int main() {
    char currentPlayer = 'X';
    bool gameWon = false;
    bool gameDraw = false;

    do {
        
        for (int i = 0; i < SIZE; ++i) {
            fill(board[i].begin(), board[i].end(), ' ');
        }

        gameWon = false;
        gameDraw = false;

        while (!gameWon && !gameDraw) {
            printBoard();
            getMove(currentPlayer);
            gameWon = isWin(currentPlayer);
            if (!gameWon) {
                gameDraw = isDraw();
            }
            if (!gameWon && !gameDraw) {
                switchPlayer(currentPlayer);
            }
        }

        printBoard();
        if (gameWon) {
            cout << "Player " << currentPlayer << " wins!" << endl;
        } else if (gameDraw) {
            cout << "It's a draw!" << endl;
        }
    } while (playAgain());

    return 0;
}

void printBoard() {
    cout << "  1 2 3" << endl;
    for (int i = 0; i < SIZE; ++i) {
        cout << i + 1 << ' ';
        for (int j = 0; j < SIZE; ++j) {
            cout << board[i][j];
            if (j < SIZE - 1) cout << '|';
        }
        cout << endl;
        if (i < SIZE - 1) cout << "  -----" << endl;
    }
}

bool isWin(char player) {
    
    for (int i = 0; i < SIZE; ++i) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }
    
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }
    return false;
}

bool isDraw() {
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (board[i][j] == ' ') {
                return false;
            }
        }
    }
    return true;
}

void getMove(char player) {
    int row, col;
    while (true) {
        cout << "Player " << player << ", enter your move (row and column): ";
        cin >> row >> col;
        row--; col--; // Convert to 0-based index
        if (row >= 0 && row < SIZE && col >= 0 && col < SIZE && board[row][col] == ' ') {
            board[row][col] = player;
            break;
        } else {
            cout << "Invalid move. Try again." << endl;
        }
    }
}

void switchPlayer(char& player) {
    player = (player == 'X') ? 'O' : 'X';
}

bool playAgain() {
    char choice;
    cout << "Do you want to play again? (y/n): ";
    cin >> choice;
    return (choice == 'y' || choice == 'Y');
}
